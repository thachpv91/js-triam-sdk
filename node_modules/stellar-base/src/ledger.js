import BigNumber from 'bignumber.js';
import isString from 'lodash/isString';
import {Keypair} from './keypair';
import {StrKey} from "./strkey";

/**
 * Create a new Account object.
 *
 * `Account` represents a single account in Stellar network and its sequence number.
 * Account tracks the sequence number as it is used by {@link TransactionBuilder}.
 * See [Accounts](https://stellar.org/developers/learn/concepts/accounts.html) for more information about how
 * accounts work in Stellar.
 * @constructor
 * @param {string} ledgerHash ID of the account (ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`)
 * @param {string} ledgerSeq current sequence number of the account
 */
export class Ledger {
  constructor(ledgerHash, ledgerSeq) {
    if (!isString(ledgerSeq)) {
      throw new Error('ledgerSeq must be of type string');
    }
    this._ledgerHash = ledgerHash;
    this.ledgerSeq = new BigNumber(ledgerSeq);
  }

  /**
   * Returns Stellar account ID, ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`
   * @returns {string}
   */
  ledgerHash() {
    return this._ledgerHash;
  }

  /**
   * @returns {string}
   */
  ledgerSeq() {
    return this.ledgerSeq.toString();
  }
}
